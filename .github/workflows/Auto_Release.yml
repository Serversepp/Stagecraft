name: After Pull Request Merge to release

on:
  pull_request:
    types: [closed]
    branches:
      - release

jobs:
  release-and-update-main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Extract current version and increment major version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          NEW_VERSION=$(echo $VERSION | awk -F'[.-]' '{printf "%d.%d", $1+1, 0}')
          mvn versions:set -DnewVersion=$NEW_VERSION
          mvn versions:commit
          echo "New version: $NEW_VERSION"
          echo $NEW_VERSION > version.txt

      - name: Build JAR
        run: mvn clean package

      - name: Commit release version
        run: |
          git add pom.xml version.txt
          git diff-index --quiet HEAD || git commit -m "Release new version"
          git push

      - name: Get PR Description
        id: pr_info
        uses: actions/github-script@v6
        with:
          script: |
            const {data} = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed',
              head: context.repo.owner + ':release'
            });
            const pr = data.find(pr => pr.merge_commit_sha === context.sha);
            return pr ? pr.body : 'No PR description found.';
          result-encoding: string

      - name: Read Version
        id: version
        run: echo "RELEASE_VERSION=$(cat version.txt)" >> $GITHUB_ENV

      - name: Create Tag
        run: |
          TAG_NAME="v${{ env.RELEASE_VERSION }}"
          echo "Creating tag: $TAG_NAME"
          git tag -a $TAG_NAME -m "Release $TAG_NAME"
          git push origin $TAG_NAME

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.pr_info.outputs.result }}
          files: |
            target/*.jar
            version.txt
          tag_name: ${{ env.RELEASE_VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update main with release version
        run: |
          git fetch
          git checkout main
          git merge -X theirs --allow-unrelated-histories origin/release -m "Merge release into main"
          git push origin main
